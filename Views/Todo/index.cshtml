@model ToDoViewModel

@{ 
  string Overdue(m_cls_ToDo task) => task.Overdue ? "bg-warning" : "";
}

@{
	ViewData["Title"] = "My Todo List";
}

<div>
    <div><h1 class="display-4">My Todo List</h1></div>
    <div class="row">

        <div class="col-sm-2">
            <form asp-controller="Todo" asp-action="Filter" method="post">
            <div class="form-group">
                <label>Category:</label>
                <select name="filter" class="form-control"
                        asp-items="@(new SelectList(Model.Categories,"CategoryId","Name", Model.Filters.CategoryId))">
                <option value="all">All</option>
                </select>
            </div>

            <div class="form-group">
                <label>Due:</label>
                <select name="filter" class="form-control"
                        asp-items="@(new SelectList(Model.DueFilters,"Key","Value", Model.Filters.Due))">
                <option value="all">All</option>
                </select>
            </div>

            <div class="form-group">
                <label>Status:</label>
                <select name="filter" class="form-control"
                        asp-items="@(new SelectList(Model.Statuses,"StatusId","Name", Model.Filters.StatusId))">
                <option value="all">All</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Filter</button>
            <a asp-controller="Todo" asp-action="Index" class="btn btn-primary">Clear</a>
            </form>
        </div>

        <div class="col-sm-10">
            <a asp-controller="Todo" asp-action="Add"><b>Add New Task</b></a>

            <table class="table table-bordered table-striped mt-2">
            <thead>
                <tr>
                <th>Description</th>
                <th>Category</th>
                <th>Due Date</th>
                <th>Status</th>
                <th class="w-25"></th>
                </tr>
            </thead>
            <tbody>
                @foreach(m_cls_ToDo task in Model.Tasks)
                {
                string overdue = Overdue(task);
                <tr>
                    <td>@task.Description</td>
                    <td>@task.Category.Name</td>
                    <td class="@overdue">@task.DueDate?.ToShortDateString()</td>
                    <td class="@overdue">@task.Status.Name</td>
                    <td>
                        <form asp-controller="Todo" asp-action="EditDelete" method="post" asp-route-id="@Model.Filters.FilterString" class="mr-2">
                            <input type="hidden" name="@nameof(m_cls_ToDo.Id)" value="@task.Id" />

                            <button type="submit" name="@nameof(m_cls_ToDo.StatusId)" value="closed" class="btn btn-primary btn-sm">Completed</button>

                            <button type="submit" class="btn btn-primary btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
                }
            </tbody>
            </table>

        </div>

    </div>

</div>